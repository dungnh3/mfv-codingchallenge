definitions:
  services.createAccountRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  services.createAccountResponse:
    properties:
      id:
        type: integer
      name:
        type: string
      user_id:
        type: integer
    type: object
  services.getAccountResponse:
    properties:
      balance:
        type: number
      id:
        type: integer
      name:
        type: string
      user_id:
        type: integer
    type: object
  services.getUserResponse:
    properties:
      account_ids:
        items:
          type: integer
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  services.registerUserRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  services.registerUserResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /accounts/{id}:
    get:
      consumes:
      - application/json
      description: get account information
      parameters:
      - description: account_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.getAccountResponse'
      summary: get account information
      tags:
      - Accounts
  /users/:id/accounts:
    post:
      consumes:
      - application/json
      description: create new account of user
      parameters:
      - description: create a new account
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/services.createAccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.createAccountResponse'
      summary: create new account of user
      tags:
      - Users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: get user information
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.getUserResponse'
      summary: get user information
      tags:
      - Users
  /users/{id}/accounts:
    get:
      consumes:
      - application/json
      description: list account information
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/services.getAccountResponse'
            type: array
      summary: list user account information
      tags:
      - Users
  /users/register:
    post:
      consumes:
      - application/json
      description: register new user
      parameters:
      - description: register a new user
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/services.registerUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.registerUserResponse'
      summary: register new user
      tags:
      - Users
swagger: "2.0"
